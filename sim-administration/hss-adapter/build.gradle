plugins {
    //  XXX What is java-library?
    id "java-library"
    id "com.google.protobuf" version "0.8.8"
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "idea"
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

dependencies {

    implementation project(":prime-modules")

    implementation project(":sim-administration:jersey-json-schema-validator")
    implementation project(":sim-administration:simcard-utils")
    implementation project(":sim-administration:simmanager")
    implementation project(":sim-administration:ostelco-dropwizard-utils")

    api "io.grpc:grpc-netty-shaded:$grpcVersion"
    api "io.grpc:grpc-protobuf:$grpcVersion"
    api "io.grpc:grpc-stub:$grpcVersion"
    api "io.grpc:grpc-core:$grpcVersion"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    api "io.arrow-kt:arrow-core:$arrowVersion"
    api "io.arrow-kt:arrow-typeclasses:$arrowVersion"
    api "io.arrow-kt:arrow-instances-core:$arrowVersion"
    api "io.arrow-kt:arrow-effects:$arrowVersion"

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    implementation "io.dropwizard:dropwizard-core:$dropwizardVersion"
    implementation "io.dropwizard:dropwizard-client:$dropwizardVersion"
    implementation "io.dropwizard:dropwizard-jdbi3:$dropwizardVersion"
    implementation "com.google.guava:guava:$guavaVersion"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"

    testImplementation "io.dropwizard:dropwizard-testing:$dropwizardVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
}


shadowJar {
    mainClassName = 'org.ostelco.simcards.hss.HssAdapterApplication'
    mergeServiceFiles()
    classifier = "uber"
    zip64 true
    version = null
}

protobuf {
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
    }

    protoc { artifact = 'com.google.protobuf:protoc:3.7.0' }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs += file('src/integration-test/kotlin')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

build.dependsOn integration

apply from: '../../gradle/jacoco.gradle'

idea {
    module {
        testSourceDirs += file('src/integration-test/kotlin')
        sourceDirs += files("${protobuf.generatedFilesBaseDir}/main/java")
        sourceDirs += files("${protobuf.generatedFilesBaseDir}/main/grpc")
    }
}


