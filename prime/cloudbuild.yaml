steps:
# Download gradle cache from Google Storage (GS) Bucket
  - name: gcr.io/cloud-builders/gsutil
    args: ['-m', 'cp', '-r', 'gs://prime-gradle-caches/', '/root/.gradle/caches/']
    volumes:
    - name: gradle_caches
      path: /root/.gradle/caches
# Gradle clean and build prime & its dependencies only
  - name: gcr.io/cloud-builders/gradle
    args: ['clean', 'prime:build']
    volumes:
    - name: gradle_caches
      path: /root/.gradle/caches
    timeout: 600s
# Remove unwanted files from gradle cache
  - name: ubuntu
    args: ['rm', '-f', '/root/.gradle/caches/modules-2/modules-2.lock']
    volumes:
    - name: gradle_caches
      path: /root/.gradle/caches
  - name: ubuntu
    args: ['rm', '-fr', '/root/.gradle/caches/*/plugin-resolution/']
    volumes:
    - name: gradle_caches
      path: /root/.gradle/caches
# Upload gradle cache to Google Storage (GS) Bucket
  - name: gcr.io/cloud-builders/gsutil
    args: ['-m', 'cp', '-r', '/root/.gradle/caches/', 'gs://prime-gradle-caches/']
    volumes:
    - name: gradle_caches
      path: /root/.gradle/caches
## Build docker images
#  - name: gcr.io/cloud-builders/docker
#    args: ['build', '--tag=gcr.io/$PROJECT_ID/prime:$TAG_NAME', '--cache-from', 'openjdk:8u171', 'prime']
#    timeout: 120s
## Deploy new docker image to Google Kubernetes Engine (GKE)
#  - name: ubuntu
#    args: ['sed', '-i', 's/PRIME_VERSION/$TAG_NAME/g', 'prime/infra/prime.yaml']
#  - name: gcr.io/cloud-builders/kubectl
#    args: ['apply', '-f', 'prime/infra/prime.yaml']
#    env:
#      - 'CLOUDSDK_COMPUTE_ZONE=europe-west1-b'
#      - 'CLOUDSDK_CONTAINER_CLUSTER=private-cluster'
#    timeout: 300s
#
## Upload docker image into Google Container Registry (GCR)
#images: ['gcr.io/$PROJECT_ID/prime:$TAG_NAME']