#
# To start this job, do
#    kubectl create -f ./cronjob.yaml
# https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/
# TODO: sync with prime.yaml

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: monitor-stripe
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: stripe-monitor
            image: gcr.io/gcp-runtimes/ubuntu_18_0_4
            env:
              - name: STRIPE_EVENTS
                value: '["customer.deleted", "customer.created", "charge.succeeded", "charge.refunded"]'
              - name: INTERVAL
                value: "-7200"        # Time interval in seconds
            command: ["/bin/sh", "-c"]
            args:
              - echo Checking Stripe;
                date;
                echo "Hello:";
                curl -s -o - -w "\n%{http_code}\n" http://prime-monitor-service:8080/stripe/monitor/hello;
                echo "API version:";
                curl -s -o - -w "\n%{http_code}\n" http://prime-monitor-service:8080/stripe/monitor/apiversion;
                echo "Webhook enabled:";
                curl -s -o - -w "\n%{http_code}\n" http://prime-monitor-service:8080/stripe/monitor/webhook/enabled;
                echo "Event subscription:";
                curl -s -o - -w "\n%{http_code}\n" -d "${STRIPE_EVENTS}" -H "content-type:application/json" http://prime-monitor-service:8080/stripe/monitor/webhook/events;
                echo "Failed events last $INTERVAL seconds:"
                echo timestamp=$(expr $(date --utc +"%s") + $INTERVAL);
                curl -s -o - -w "\n%{http_code}\n" http://prime-monitor-service:8080/stripe/monitor/events/failed?start=$(expr $(date --utc +"%s") + $INTERVAL);
                echo Checks completed;
          restartPolicy: OnFailure
