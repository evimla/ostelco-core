apiVersion: v1
kind: Service
metadata:
  name: prime-service
  labels:
    app: prime
    tier: backend
spec:
  type: LoadBalancer
  loadBalancerIP: 35.190.197.222
  ports:
  - name: grpc
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app: prime
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: prime-api
  labels:
    app: prime
    tier: backend
spec:
  type: LoadBalancer
  loadBalancerIP: 35.190.192.27
  ports:
  - name: https
    port: 443
    protocol: TCP
  selector:
    app: prime
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: prime-houston-api
  labels:
    app: prime
    tier: backend
spec:
  type: LoadBalancer
  loadBalancerIP: 35.195.221.117
  ports:
  - name: https
    port: 443
    targetPort: 7443
    protocol: TCP
  selector:
    app: prime
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: prime-alvin-api
  labels:
    app: prime
    tier: backend
spec:
  type: LoadBalancer
  loadBalancerIP: 35.240.69.194
  ports:
  - name: https
    port: 443
    targetPort: 6443
    protocol: TCP
  selector:
    app: prime
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: prime-metrics
  labels:
    app: prime
    tier: backend
spec:
  type: LoadBalancer
  loadBalancerIP: 146.148.16.201
  ports:
  - name: grpc
    port: 443
    targetPort: 9443
    protocol: TCP
  selector:
    app: prime
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: pseudonym-server-service
  labels:
    app: prime
    tier: backend
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: prime
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: prime-dwadmin-service
  labels:
    app: prime
    tier: backend
spec:
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
  selector:
    app: prime
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prime
  labels:
    app: prime
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: prime
      tier: backend
  template:
    metadata:
      labels:
        app: prime
        tier: backend
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/prometheus-metrics'
        prometheus.io/port: '8081'
    spec:
      initContainers:
      - name: "init-downloader"
        image: "google/cloud-sdk:latest"
        command: ['sh', '-c', 'gsutil cp gs://prime-files/dev/*.* /config-data/']
        volumeMounts:
        - name: config-data
          mountPath: /config-data/
      containers:
      - name: ocs-esp
        image: gcr.io/endpoints-release/endpoints-runtime:1
        args: [
          "--http2_port=9000",
          "--ssl_port=8443",
          "--status_port=8090",
          "--service=ocs.dev.ostelco.org",
          "--rollout_strategy=managed",
          "--backend=grpc://127.0.0.1:8082"
        ]
        ports:
        - containerPort: 9000
        - containerPort: 8443
        volumeMounts:
        - mountPath: /etc/nginx/ssl
          name: ocs-ostelco-ssl
          readOnly: true
      - name: api-esp
        image: gcr.io/endpoints-release/endpoints-runtime:1
        args: [
          "--http2_port=9002",
          "--ssl_port", "443",
          "--status_port=8092",
          "--service=api.dev.ostelco.org",
          "--rollout_strategy=managed",
          "--backend=127.0.0.1:8080"
        ]
        ports:
        - containerPort: 9002
        - containerPort: 443
        volumeMounts:
        - mountPath: /etc/nginx/ssl
          name: api-ostelco-ssl
          readOnly: true
      - name: alvin-api-esp
        image: gcr.io/endpoints-release/endpoints-runtime:1
        args: [
          "--http_port=9008",
          "--ssl_port=6443",
          "--status_port=8097",
          "--service=alvin-api.dev.ostelco.org",
          "--rollout_strategy=managed",
          "--backend=127.0.0.1:8080"
        ]
        ports:
        - containerPort: 9008
        - containerPort: 6443
        volumeMounts:
        - mountPath: /etc/nginx/ssl
          name: api-ostelco-ssl
          readOnly: true
      - name: metrics-esp
        image: gcr.io/endpoints-release/endpoints-runtime:1
        args: [
          "--http2_port=9004",
          "--ssl_port=9443",
          "--status_port=8094",
          "--service=metrics.dev.ostelco.org",
          "--rollout_strategy=managed",
          "--backend=grpc://127.0.0.1:8083"
        ]
        ports:
        - containerPort: 9004
        - containerPort: 9443
        volumeMounts:
        - mountPath: /etc/nginx/ssl
          name: metrics-ostelco-ssl
          readOnly: true
      - name: houston-api-esp
        image: gcr.io/endpoints-release/endpoints-runtime:1
        args: [
          "--http_port=9006",
          "--ssl_port=7443",
          "--status_port=8095",
          "--service=houston-api.dev.ostelco.org",
          "--rollout_strategy=managed",
          "--backend=127.0.0.1:8080"
        ]
        ports:
        - containerPort: 9006
        - containerPort: 7443
        volumeMounts:
        - mountPath: /etc/nginx/ssl
          name: api-ostelco-ssl
          readOnly: true
      - name: prime
        image: eu.gcr.io/_GCP_PROJECT_ID/prime:PRIME_VERSION
        imagePullPolicy: Always
        env:
        - name: SLACK_CHANNEL
          value: prime-alerts
        - name: SLACK_WEBHOOK_URI
          valueFrom:
            secretKeyRef:
              name: slack-secrets
              key: slackWebHookUri
        - name: NEO4J_HOST
          value: neo4j
        - name: DATASTORE_NAMESPACE
          value: dev
        - name: FIREBASE_ROOT_PATH
          value: dev
        - name: DATA_TRAFFIC_TOPIC
          value: data-traffic-dev
        - name: PURCHASE_INFO_TOPIC
          value: purchase-info-dev
        - name: ACTIVE_USERS_TOPIC
          value: active-users-dev
        - name: STRIPE_API_KEY
          valueFrom:
            secretKeyRef:
              name: stripe-secrets
              key: stripeApiKey
        - name: STRIPE_ENDPOINT_SECRET
          valueFrom:
            secretKeyRef:
              name: stripe-secrets
              key: stripeEndpointSecret
        - name: SCANINFO_MASTERKEY_URI
          valueFrom:
            secretKeyRef:
              name: scaninfo-keys
              key: masterKeyUri
        - name: SCANINFO_STORAGE_BUCKET
          valueFrom:
            secretKeyRef:
              name: scaninfo-secrets
              key: bucketName
        - name: JUMIO_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: jumio-secrets
              key: apiToken
        - name: JUMIO_API_SECRET
          valueFrom:
            secretKeyRef:
              name: jumio-secrets
              key: apiSecret
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /secret/prime-service-account.json
        - name: GCP_PROJECT_ID
          value: _GCP_PROJECT_ID
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: simmgr-test-secrets
              key: dbUser
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: simmgr-test-secrets
              key: dbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: simmgr-test-secrets
              key: dbUrl
        - name: WG2_USER
          valueFrom:
            secretKeyRef:
              name: simmgr-test-secrets
              key: wg2User
        - name: WG2_API_KEY
          valueFrom:
            secretKeyRef:
              name: simmgr-test-secrets
              key: wg2ApiKey
        - name: WG2_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: simmgr-test-secrets
              key: wg2Endpoint
        - name: ES2PLUS_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: simmgr-test-secrets
              key: es2plusEndpoint
        - name: FUNCTION_REQUESTER_IDENTIFIER
          valueFrom:
            secretKeyRef:
              name: simmgr-test-secrets
              key: functionRequesterIdentifier

        volumeMounts:
        - name: secret-config
          mountPath: "/secret"
          readOnly: true
        - name: config-data
          mountPath: "/config-data"
          readOnly: true
        - name: scaninfo-keysets
          mountPath: "/scaninfo-keysets"
          readOnly: true
        - name: keystore
          mountPath: "/certs"
          readOnly: true
        ports:
        - containerPort: 8080
        - containerPort: 8081
        - containerPort: 8082
        - containerPort: 8083
      volumes:
      - name: secret-config
        secret:
          secretName: prime-service-account.json
      - name: api-ostelco-ssl
        secret:
          secretName: api-ostelco-ssl
      - name: scaninfo-keysets
        secret:
          secretName: scaninfo-keysets
      - name: ocs-ostelco-ssl
        secret:
          secretName: ocs-ostelco-ssl
      - name: metrics-ostelco-ssl
        secret:
          secretName: metrics-ostelco-ssl
      - name: keystore
        secret:
          secretName: simmgr-test-secrets
          items:
            - key: idemiaClientCert
              path: idemia-client-cert.jks
      - name: config-data
        emptyDir: {}
