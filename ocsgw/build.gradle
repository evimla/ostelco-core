plugins {
    id "application"
    // FIXME martin: unable to update to 4.0.1
    id "com.github.johnrengelman.shadow" version "2.0.4"
}

dependencies {
    implementation project(':ocs-grpc-api')
    implementation project(':analytics-grpc-api')

    implementation project(':diameter-stack')
    implementation "com.google.cloud:google-cloud-core-grpc:$googleCloudVersion"

    implementation "javax.xml.bind:jaxb-api:$jaxbVersion"
    implementation "javax.activation:activation:$javaxActivationVersion"

    implementation 'ch.qos.logback:logback-classic:1.2.3'

    // log to gcp stack-driver
    implementation 'com.google.cloud:google-cloud-logging-logback:0.67.0-alpha'

    testImplementation project(':diameter-test')
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5Version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5Version"

    testImplementation 'junit:junit:4.12'
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit5Version"
}

shadowJar {
    mainClassName = 'org.ostelco.ocsgw.OcsApplication'
    mergeServiceFiles()
    classifier = "uber"
    version = null
}

test {
    // native support to Junit5 in Gradle 4.6+
    useJUnitPlatform {
        includeEngines 'junit-jupiter', 'junit-vintage'
    }
    testLogging {
        exceptionFormat = 'full'
        events "PASSED", "FAILED", "SKIPPED"
    }
}

task pack(dependsOn: ['packDev', 'packProd'])

task packProd(type: Zip, dependsOn: 'shadowJar') {
    from ('script/') {
        into(project.name + '/script')
    }
    from ('config/dictionary.xml') {
        into (project.name + '/config/')
    }
    from ('config/server-jdiameter-config.prod.xml') {
        into (project.name + '/config/')
        rename { String fileName ->
            fileName.replace('prod.', '')
        }
    }
    from ('config/pantel-prod.json') {
        into (project.name + '/config/')
    }
    from ('config/logback.xml') {
        into (project.name + '/config/')
    }
    from ('build/libs/ocsgw-uber.jar') {
        into(project.name + '/build/libs/')
    }
    from ('Dockerfile') {
        into(project.name)
    }
    archiveName = 'ocsgw.zip'
    destinationDir = file('build/deploy/prod/')
}

task packDev(type: Zip, dependsOn: 'shadowJar') {
    from ('script/') {
        into(project.name + '/script')
    }
    from ('config/logback.dev.xml') {
        into (project.name + '/config/')
        rename { String fileName ->
            fileName.replace('dev.', '')
        }
    }
    from ('config/dictionary.xml') {
        into (project.name + '/config/')
    }
    from ('config/server-jdiameter-config.dev.xml') {
        into (project.name + '/config/')
        rename { String fileName ->
            fileName.replace('dev.', '')
        }
    }
    from ('config/pantel-prod.json') {
        into (project.name + '/config/')
    }
    from ('build/libs/ocsgw-uber.jar') {
        into(project.name + '/build/libs/')
    }
    from ('Dockerfile') {
        into(project.name)
    }
    archiveName = 'ocsgw.zip'
    destinationDir = file('build/deploy/dev/')
}

apply from: '../jacoco.gradle'