@startuml

'
' Declarations
'

[ocsgw]

interface OcsGrpcService

[OcsGrpcServer]

interface OcsAsyncRequestConsumer

[OcsService]

interface EventProducer

[EventProducerImpl]

interface OcsAsyncResponseProducer

node OcsDisruptor {
    database OcsState
    database BundleBalanceStore
    interface "**PurchaseRequestHandler**\n //implements// **EventHandler**" AS PREH
    [ThresholdChecker]
    database AnalyticsReporter
    [OcsEventToGrpcResponseMapper]
    [ClearingEvent]
}

actor Client

interface OcsSubscriberService

[OcsPrimeService]

[PurchaseRequestHandler]

'
' Purchase Request
'

Client --> OcsSubscriberService : <<uses>> Purchase Request

OcsSubscriberService -- OcsPrimeService : <<implements>>

OcsPrimeService --> PurchaseRequestHandler : <<uses>> Purchase Request

PurchaseRequestHandler -right-> EventProducer : <<uses>> Purchase Request

PurchaseRequestHandler -- PREH : <<implements>>
'
' Consumption
'

ocsgw -down-> OcsGrpcService : gRPC connection

OcsGrpcServer .right.> OcsGrpcService : binds

OcsGrpcService -down-> OcsAsyncRequestConsumer : <<uses>> Sends Requests

OcsAsyncRequestConsumer -down- OcsService : <<implements>>

OcsService --right- OcsAsyncResponseProducer : <<implements>>

OcsService -left-> EventProducer : <<uses>> Forwards Requests

EventProducer -down- EventProducerImpl

EventProducerImpl -down-> OcsDisruptor : <<uses>> Submit OcsEvent

'
' Disruptor
'

OcsState --> BundleBalanceStore
OcsState --> PREH
OcsState --> ThresholdChecker
OcsState --> AnalyticsReporter
OcsState --> OcsEventToGrpcResponseMapper

OcsEventToGrpcResponseMapper --> ClearingEvent
BundleBalanceStore --> ClearingEvent
PREH --> ClearingEvent
ThresholdChecker --> ClearingEvent
AnalyticsReporter --> ClearingEvent

OcsEventToGrpcResponseMapper -up-> OcsAsyncResponseProducer

@enduml