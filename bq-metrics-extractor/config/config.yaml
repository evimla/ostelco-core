logging:
  level: INFO
  loggers:
    org.ostelco: DEBUG
  appenders:
    - type: console
      layout:
        type: json
        customFieldNames:
           level: severity

bqmetrics:
  - type: summary
    name: active_users
    help: Number of active users
    resultColumn: count
    sql: >
        SELECT count(distinct user_pseudo_id) AS count FROM `${DATASET_PROJECT}.analytics_160712959.events_*`
        WHERE event_name = "first_open"
  - type: gauge
    name: sims_who_have_used_data
    help: Number of SIMs that has used data last 24 hours
    resultColumn: count
    sql: >
        SELECT count(DISTINCT msisdn) AS count FROM `${DATASET_PROJECT}.data_consumption${DATASET_MODIFIER}.raw_consumption`
        WHERE timestamp >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 DAY)
  - type: gauge
    name: total_data_used
    help: Total data used last 24 hours
    resultColumn: count
    sql: >
      SELECT COALESCE (
        (SELECT sum(bucketBytes) AS count FROM `${DATASET_PROJECT}.data_consumption${DATASET_MODIFIER}.raw_consumption`
        WHERE timestamp >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 DAY)), 0) as count
  - type: gauge
    name: revenue_last24hours
    help: Revenue for last 24 hours
    resultColumn: revenue
    sql: >
      SELECT COALESCE (
        (SELECT SUM(product.price.amount) as revenue FROM `${DATASET_PROJECT}.purchases${DATASET_MODIFIER}.raw_purchases`
        WHERE TIMESTAMP_MILLIS(timestamp) > TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)), 0) as revenue
  - type: gauge
    name: total_paid_users
    help: Number of users who have purchased in last 24 hours
    resultColumn: count
    sql: >
      SELECT COUNT(DISTINCT subscriberId) as count FROM `${DATASET_PROJECT}.purchases${DATASET_MODIFIER}.raw_purchases`
      WHERE TIMESTAMP_MILLIS(timestamp) > TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)
  - type: gauge
    name: active_users_right_now
    help: Number of active users rigth now (with 1 minute interval)
    resultColumn: count
    sql: >
        SELECT count(DISTINCT msisdn) AS count FROM `${DATASET_PROJECT}.data_consumption${DATASET_MODIFIER}.raw_consumption`
        WHERE timestamp >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 MINUTE)
#-----------------------------------------------
# Metrics values split at day boundary.
# This done due to the pseudonymisation of data.
# The keys for data is rotated at the beginning of every week (currently).
  - type: gauge
    name: sims_who_have_used_data_today
    help: Number of SIMs that has used data today
    resultColumn: count
    sql: >
      SELECT count(DISTINCT msisdn) AS count FROM `${DATASET_PROJECT}.data_consumption${DATASET_MODIFIER}.raw_consumption`
      WHERE timestamp >= TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY)
  - type: gauge
    name: sims_who_have_used_data_yesterday
    help: Number of SIMs that has used data yesterday
    resultColumn: count
    sql: >
      SELECT count(DISTINCT msisdn) AS count FROM `${DATASET_PROJECT}.data_consumption${DATASET_MODIFIER}.raw_consumption`
      WHERE timestamp >= TIMESTAMP_SUB(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY), INTERVAL 1 DAY)
      AND timestamp < TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY)

  - type: gauge
    name: sims_who_have_been_active_today
    help: Number of SIMs that has had an active data session today
    resultColumn: count
    sql: >
      SELECT COUNT (DISTINCT user.msisdn) AS count FROM `${DATASET_PROJECT}.ocs_gateway${DATASET_MODIFIER}.raw_activeusers`, UNNEST(users) as user
      WHERE timestamp >= TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY)
  - type: gauge
    name: sims_who_was_active_yesterday
    help: Number of SIMs that has had an active data session yesterday
    resultColumn: count
    sql: >
      SELECT COUNT (DISTINCT user.msisdn)  AS count FROM `${DATASET_PROJECT}.ocs_gateway${DATASET_MODIFIER}.raw_activeusers`, UNNEST(users) as user
      WHERE timestamp >= TIMESTAMP_SUB(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY), INTERVAL 1 DAY)
      AND timestamp < TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY)
  - type: gauge
    name: total_data_used_today
    help: Total data used today
    resultColumn: count
    sql: >
      SELECT COALESCE (
        (SELECT sum(bucketBytes) AS count FROM `${DATASET_PROJECT}.data_consumption${DATASET_MODIFIER}.raw_consumption`
        WHERE timestamp >= TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY)), 0) as count
  - type: gauge
    name: total_data_used_yesterday
    help: Total data used yesterday
    resultColumn: count
    sql: >
      SELECT COALESCE (
        ( SELECT sum(bucketBytes) AS count FROM `${DATASET_PROJECT}.data_consumption${DATASET_MODIFIER}.raw_consumption`
          WHERE timestamp >= TIMESTAMP_SUB(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY), INTERVAL 1 DAY)
          AND timestamp < TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY) ), 0) as count

  - type: gauge
    name: total_data_used_today_local_loltel_test
    help: Total data used today local loltel-test
    resultColumn: count
    sql: >
      SELECT COALESCE (
        (SELECT sum(bucketBytes) AS count FROM `${DATASET_PROJECT}.data_consumption${DATASET_MODIFIER}.raw_consumption`
        WHERE timestamp >= TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY)
        AND apn = "loltel-test"
        AND mccMnc = "24201"), 0) as count
  - type: gauge
    name: total_data_used_yesterday_local_lotlel_test
    help: Total data used yesterday local loltel-test
    resultColumn: count
    sql: >
      SELECT COALESCE (
        ( SELECT sum(bucketBytes) AS count FROM `${DATASET_PROJECT}.data_consumption${DATASET_MODIFIER}.raw_consumption`
          WHERE timestamp >= TIMESTAMP_SUB(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY), INTERVAL 1 DAY)
          AND timestamp < TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY)
          AND apn = "loltel-test"
          AND mccMnc = "24201"), 0) as count


  - type: gauge
    name: total_data_used_today_roaming_loltel_test
    help: Total data used today roaming loltel-test
    resultColumn: count
    sql: >
      SELECT COALESCE (
        (SELECT sum(bucketBytes) AS count FROM `${DATASET_PROJECT}.data_consumption${DATASET_MODIFIER}.raw_consumption`
        WHERE timestamp >= TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY)
        AND apn = "loltel-test"
        AND mccMnc != "24201"), 0) as count
  - type: gauge
    name: total_data_used_yesterday_roaming_lotlel_test
    help: Total data used yesterday roaming loltel-test
    resultColumn: count
    sql: >
      SELECT COALESCE (
        ( SELECT sum(bucketBytes) AS count FROM `${DATASET_PROJECT}.data_consumption${DATASET_MODIFIER}.raw_consumption`
          WHERE timestamp >= TIMESTAMP_SUB(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY), INTERVAL 1 DAY)
          AND timestamp < TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY)
          AND apn = "loltel-test"
          AND mccMnc != "24201"), 0) as count

  - type: gauge
    name: revenue_today
    help: Revenue generated today
    resultColumn: revenue
    sql: >
      SELECT COALESCE (
        ( SELECT SUM(product.price.amount) as revenue FROM `${DATASET_PROJECT}.purchases${DATASET_MODIFIER}.raw_purchases`
          WHERE TIMESTAMP_MILLIS(timestamp) >= TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY) ), 0) as revenue
  - type: gauge
    name: revenue_yesterday
    help: Revenue generated yesterday
    resultColumn: revenue
    sql: >
      SELECT COALESCE (
        ( SELECT SUM(product.price.amount) as revenue FROM `${DATASET_PROJECT}.purchases${DATASET_MODIFIER}.raw_purchases`
          WHERE TIMESTAMP_MILLIS(timestamp) >= TIMESTAMP_SUB(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY), INTERVAL 1 DAY)
          AND TIMESTAMP_MILLIS(timestamp) < TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY) ), 0) as revenue

  - type: gauge
    name: total_paid_users_today
    help: Number of users who have purchased today
    resultColumn: count
    sql: >
      SELECT COUNT(DISTINCT subscriberId) as count FROM `${DATASET_PROJECT}.purchases${DATASET_MODIFIER}.raw_purchases`
      WHERE TIMESTAMP_MILLIS(timestamp) >= TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY)
  - type: gauge
    name: total_paid_users_yesterday
    help: Number of users who have purchased yesterday
    resultColumn: count
    sql: >
      SELECT COUNT(DISTINCT subscriberId) as count FROM `${DATASET_PROJECT}.purchases${DATASET_MODIFIER}.raw_purchases`
      WHERE TIMESTAMP_MILLIS(timestamp) >= TIMESTAMP_SUB(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY), INTERVAL 1 DAY)
      AND TIMESTAMP_MILLIS(timestamp) < TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), DAY)
